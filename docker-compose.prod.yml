services:
  web:
    image: nginx:1.23.0
    container_name: web
    depends_on:
      - frontend
      - backend
    links:
      - frontend
      - backend
    volumes:
      - ./.ssl/web/certs/localhost.crt:/etc/nginx/ssl/localhost.crt
      - ./.ssl/web/private/localhost.key:/etc/nginx/ssl/localhost.key
      - ./web/conf.d/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
      - 443:443
  frontend:
    image: node:18.9.1
    environment:
      - REACT_APP_API_URL=https://localhost/api
    container_name: frontend
    volumes:
      - ./frontend/bonne-coordination:/projects/frontend/bonne-coordination
    ports:
      - 3000:3000
    working_dir: /projects/frontend/bonne-coordination
    tty: true
    command: bash -c "npm i && npm start"
  backend:
    image: golang:1.19.1
    container_name: backend
    working_dir: /app
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db
    links:
      - db
    volumes:
      - ./backend:/app
    ports:
      - 8080:8080
    tty: true
  db:
    image: postgres:14.4
    container_name: db
    command: -c 'config_file=/etc/postgresql/postgresql.conf'
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_INITDB_ARGS="--encoding=UTF8"
    volumes:
      - ./.ssl/db:/etc/ssl
      - ./db/init/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./db/backup:/backup
      - ./db/conf/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./db/conf/pg_hba.conf:/etc/postgresql/pg_hba.conf
    ports:
      - 5432:5432
    tty: true
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www:/var/www/certbot
